/**
* Functions, modules, etc to post to twitter
*/

var util = require('util'),
    twitter = require('twitter'),
    secrets = require('twitter_secrets'); //Just exports.consumer_key = 'xyz999...' etc
 
var twit = new twitter({
  consumer_key: secrets.consumer_key,
  consumer_secret: secrets.consumer_secret,
  access_token_key: secrets.access_token_key,
  access_token_secret: secrets.access_token_secret
});

exports.info = function(next_round, vote_array){

  //Count total votes
  var total_votes = 0;
  vote_array.forEach(function(element){ total_votes += element });

  //Send the tweet only if active
  if(total_votes > 0){

    //Get current color
    if(global.current_color == -1) 
      var twit_color = 'black\'s';
    else
      var twit_color = 'white\'s';

    //Get time left
    var now = new Date();
    var time_left = next_round - now;

    var SEC = 1000,
        MIN = SEC * 60,
        HOUR = MIN * 60;

    var hour = Math.floor(time_left/HOUR);
    var min = Math.floor(time_left/MIN) - hour * 60;
    var sec = Math.floor(time_left/SEC) - (hour * 60 * 60) - (min * 60);
    
    if(total_votes == 1)
      total_votes = '1 vote';
    else
      total_votes = total_votes + ' votes';

    var time_message = 'There\'s ' +total_votes+ ' for ' + twit_color + ' move: ';

    if(hour > 1){
      time_message += hour + ' hours ';
    } else if(hour == 1){
      time_message += ' 1 hour ';
    }

    if(min > 1){
      time_message += min + ' minutes';
    } else if(min == 1){
      time_message += ' 1 minute';
    }

    if(sec > 1){
      time_message += ' and ' + sec + ' seconds';
    } else if(sec == 1){
      time_message += ' and 1 second';
    }

    time_message += ' remaining this round. http://hivego.info';

    updateStatus(time_message);

  } else {

    //Go back to bed Garfield.
    return;
  }
}

function updateStatus(message){
  twit
    .verifyCredentials(function(data){
      //do nothing, but give it a callback...
    })
    .updateStatus(message, function(data){
      //...and again, or it crashes
    });
}
